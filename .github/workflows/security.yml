name: Security Scan

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Run Nancy vulnerability scanner
      run: |
        go install github.com/sonatypecommunity/nancy@latest
        go list -json -deps ./... | nancy sleuth
    
    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

  container-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Run Grype vulnerability scanner
      uses: anchore/scan-action@v3
      with:
        image: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main'
        fail-build: false
        severity-cutoff: critical
    
    - name: Upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif

  kubernetes-manifest-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.12.1
    
    - name: Generate Kubernetes manifests
      run: |
        mkdir -p generated-manifests
        helm template security-test ./helm/talos-kms-vault \
          --set ciliumNetworkPolicy.enabled=true \
          --set rbac.create=true \
          --set podSecurityContext.runAsNonRoot=true \
          --output-dir generated-manifests
    
    - name: Run Kubesec scan
      run: |
        docker run --rm -v $(pwd)/generated-manifests:/manifests \
          kubesec/kubesec:latest scan /manifests/talos-kms-vault/templates/*.yaml
    
    - name: Run Polaris scan
      run: |
        docker run --rm -v $(pwd)/generated-manifests:/manifests \
          quay.io/fairwinds/polaris:latest audit --audit-path /manifests \
          --format pretty